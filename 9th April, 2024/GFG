// Problem :-

Minimum Points To Reach Destination

Given a m*n grid with each cell consisting of positive, negative, or zero point. We can move across a cell only if we have positive points. 
Whenever we pass through a cell, points in that cell are added to our overall points, the task is to find minimum initial points to reach cell 
(m-1, n-1) from (0, 0) by following these certain set of rules :
1. From a cell (i, j) we can move to (i + 1, j) or (i, j + 1).
2. We cannot move from (i, j) if your overall points at (i, j) are <= 0.
3. We have to reach at (n-1, m-1) with minimum positive points i.e., > 0.



// Solution :-

class Solution{

	public:
	
	int help(vector<vector<int>> &points, int i, int j, int m, int n, vector<vector<int>> &dp)
    {
        if (i >= m || j >= n || i < 0 || j < 0)
            return INT_MAX;
        if (i == m - 1 && j == n - 1)
            return points[i][j];
        if (dp[i][j] != INT_MIN)
            return dp[i][j];
        int down = points[i][j] + help(points, i + 1, j, m, n, dp);
        int right = points[i][j] + help(points, i, j + 1, m, n, dp);
        down = min(down, 0);
        right = min(right, 0);
        return dp[i][j] = max(down, right);
    }
    
    
    int minPoints(int m, int n, vector<vector<int>> points)
    {
        vector<vector<int>> dp(m, vector<int>(n, INT_MIN));
        int res = help(points, 0, 0, m, n, dp);
        return abs(res) + 1;
    }
};
