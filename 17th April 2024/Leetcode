// Problem :-

Smallest String Starting From Leaf

You are given the root of a binary tree where each node has a value in the range [0, 25] representing the letters 'a' to 'z'.

Return the lexicographically smallest string that starts at a leaf of this tree and ends at the root.

As a reminder, any shorter prefix of a string is lexicographically smaller.

For example, "ab" is lexicographically smaller than "aba".
A leaf of a node is a node that has no children.



// Solution :-

class Solution {
public:
void f(TreeNode*root,string &ans, vector<string>&v){
    if(root==NULL)return;
    if(root->left==NULL && root->right==NULL){
        ans+=('a'+root->val);
        string x=ans;
        reverse(x.begin(),x.end());
        v.push_back(x);
        return;
    }
        ans+=('a'+root->val);
    f(root->left,ans,v);
    if(root->left)ans.pop_back();
    f(root->right,ans,v);
    if(root->right)ans.pop_back();
}
    string smallestFromLeaf(TreeNode* root) {
        string ans="";
        vector<string>v;
        f(root,ans,v);
        sort(v.begin(),v.end());
        return v[0];
    }
};
